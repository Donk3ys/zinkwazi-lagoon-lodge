apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
# Deployment Replica-Set
spec:
  selector:
    # Replica-Set manages pods with matching pod label (app : <name>)
    matchLabels:
      app: api-pod
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  # Pod
  template:
    metadata:
      labels:
        app: api-pod
    spec:
      containers:
      - name: api-container
        image: docker.pkg.github.com/donk3ys/docker-images/zink-api
        #image: donk3ee/zink-api
        #image: zink-api
        imagePullPolicy: Never
        #imagePullPolicy: Always
        ports:
          - containerPort: 8080
        env:
          - name: NODE_ENV
            value: production
          - name: EXPRESS_PORT
            value: "8080"
          - name: PGHOST
            value: db-cluster-ip-service
          - name: PGUSER
            value: dev
          - name: PGPASSWORD
            value: ChangeMe
          - name: PGDATABASE
            value: zinkwazi_menu
          - name: PGPORT
            value: "5432"
          - name: REDIS_HOST
            value: cache-cluster-ip-service
          - name: REDIS_PORT
            value: "6379"
      imagePullSecrets:
      - name: git-reg-creds
        # git-reg-creds

---
apiVersion: v1
kind: Service
metadata:
  name: api-cluster-ip-service
spec:
  #type: LoadBalancer
  #type: NodePort
  type: ClusterIP
  # selector app: <name> must == <pod label: app <name>> (key value pair)
  selector:
    app: api-pod
  ports:
    - protocol: TCP
      # port == pod external port
      port: 8080
      # targetPort == containerPort in pod ports deployment (internal port)
      targetPort: 8080
      # nodePort for external access (local host)
      #nodePort: 30000

