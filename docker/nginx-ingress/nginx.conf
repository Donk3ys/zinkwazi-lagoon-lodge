user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
		include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    keepalive_timeout  65;

	#	upstream socket_node {
	#			ip_hash;
	#			server api:8080;
	#	}

		server {

				listen       80;
				listen  [::]:80;
				#server_name example.org www.example.org;
				server_name  localhost;

				# Send all traffic to https
				#return 301 https://$server_name$request_uri;

				location / {
						proxy_pass http://web-admin:8000;
				}

				location /api {
						proxy_pass http://api:8080;
				}

				location /socket.io {
						proxy_http_version 1.1;
						proxy_set_header Upgrade $http_upgrade;
						proxy_set_header Connection "upgrade";
						proxy_set_header Host $host;
						proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
						proxy_pass http://api:8080;
						#proxy_pass http://socket_node;
				}

				location ~ /.well-known/acme-challenge{
						allow all;
						root /usr/share/nginx/html/letsencrypt;
    		}
		}


#		server {
#
#				listen              443 ssl;
#				#server_name example.org www.example.org;
#				server_name  localhost;
#				ssl_certificate     www.example.com.crt;
#				ssl_certificate_key www.example.com.key;
#				ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
#				ssl_ciphers         HIGH:!aNULL:!MD5;
#
#				location / {
#						proxy_pass http://web-admin:8000;
#				}
#
#				location /api {
#						proxy_pass http://api:8080;
#				}
#
#				location ~ /.well-known/acme-challenge{
#        	allow all;
#        	root /usr/share/nginx/html/letsencrypt;
#    		}
#
#				#error_page  404              /404.html;
#
#				# redirect server error pages to the static page /50x.html
#				#
#				error_page   500 502 503 504  /50x.html;
#				location = /50x.html {
#						root   /usr/share/nginx/html;
#				}
#		}
}
